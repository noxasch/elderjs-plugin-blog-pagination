"use strict";var createRouteList$1={exports:{}};!function(e,t){function o(e,t,o,s){const a=e.markdown[o].length;let n=Math.floor(a/t),r=[];if(a%t>0&&(n+=1),console.log(`elderjs-plugin-blog-pagination: Processing ${a} post into ${n} pages.`),n>1)for(let e=0;e<n;e++)0===e?r.push({slug:o,page:e+1,route:o,postStart:0,postEnd:t,lastPage:n,hasPrevious:!1,hasNext:!0,nextPage:{slug:`${o}/${e+2}`},template:s}):r.push({slug:`${o}/${e+1}`,page:e+1,route:o,postStart:e*t,postEnd:e*t+t,lastPage:n,hasPrevious:!0,previousPage:{slug:`${o}/${e-1==0?"":e}`},hasNext:e!==n-1,nextPage:e+1===n?void 0:{slug:`${o}/${e+2}`},template:s});else r.push({slug:o,page:1,route:o,postStart:0,postEnd:t,lastPage:n,hasPrevious:!1,hasNext:!1,template:s});return r}e.exports=o,t.default=o}(createRouteList$1,createRouteList$1.exports);const createRouteList=createRouteList$1.exports,plugin={name:"elderjs-plugin-blog-pagination",description:"Generate pagination from markdown blog post",init:async e=>e,hooks:[{hook:"allRequests",name:"AddIndexPaginationRequest",description:"Generate pagination request object from markdown data",run:({plugin:e,data:t,allRequests:o,settings:s})=>{const a="@elderjs/plugin-markdown"in s.plugins,n=e.config.postPerPage,r=e.config.routes,i=e.config.indexTemplate;return a?r.forEach(e=>{const s=createRouteList(t,n,e,i);o=[...o,...s]}):console.log("elderjs-plugin-blog-pagination: Skipping pagination as @elderjs/plugin-markdown not detected in elderjs plugin."),{allRequests:o}}}],config:{routes:["blog"],postPerPage:5,indexTemplate:"BlogIndex",routeConfig:[{routes:["blog"],postPerPage:5,indexTemplate:"BlogIndex"},{routes:["travel"],postPerPage:5,indexTemplate:"TravelIndex"}]}};var src=plugin;module.exports=src;